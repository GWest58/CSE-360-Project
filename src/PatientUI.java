/**
 *
 * @author Alexandra Nazareno and Nizar Kury
 */

// test changes
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class PatientUI extends javax.swing.JFrame {

    /**
<<<<<<< HEAD
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
		public PatientUI(Patient patient) {
		    initComponents(patient);
		}

    @SuppressWarnings({ "unchecked", "deprecation" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(Patient patient) {

        PatientTabbedPane = new javax.swing.JTabbedPane();
        symptomHistoryTab = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        submitSymptomsTab = new javax.swing.JPanel();
        painSlider = new javax.swing.JSlider();
        shortnessOfBreathSlider = new javax.swing.JSlider();
        wellbeingSlider = new javax.swing.JSlider();
        anxietySlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        tirednessSlider = new javax.swing.JSlider();
        depressionSlider = new javax.swing.JSlider();
        nauseaSlider = new javax.swing.JSlider();
        appetiteSlider = new javax.swing.JSlider();
        drowsinessSlider = new javax.swing.JSlider();
        otherSlider = new javax.swing.JSlider();
        submitButton = new javax.swing.JButton();
        painLabel = new javax.swing.JLabel();
        shortnessOfBreathLabel = new javax.swing.JLabel();
        wellBeingLabel = new javax.swing.JLabel();
        anxietyLabel = new javax.swing.JLabel();
        tirednessLabel = new javax.swing.JLabel();
        depressionLabel = new javax.swing.JLabel();
        nauseaLabel = new javax.swing.JLabel();
        appetiteLabel = new javax.swing.JLabel();
        drowsinessLabel = new javax.swing.JLabel();
        otherLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        
        // SET THE WINDOW SIZE/ETC.
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
       // setPreferredSize(new java.awt.Dimension(900, 1200));
        
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Symptom History");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Select Symptom");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pain", "Shortness of Breath", "Wellbeing", "Anxiety", "Tiredness", "Depression", "Appetit", "Nausea", "Drowsiness", "Other" }));
        jComboBox1.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Select a symptom from the drop-down menu to view its previous ratings.");

        javax.swing.GroupLayout symptomHistoryTabLayout = new javax.swing.GroupLayout(symptomHistoryTab);
        symptomHistoryTab.setLayout(symptomHistoryTabLayout);
        symptomHistoryTabLayout.setHorizontalGroup(
            symptomHistoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symptomHistoryTabLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symptomHistoryTabLayout.createSequentialGroup()
                .addContainerGap(462, Short.MAX_VALUE)
                .addGroup(symptomHistoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symptomHistoryTabLayout.createSequentialGroup()
                        .addGroup(symptomHistoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(symptomHistoryTabLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(48, 48, 48)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(404, 404, 404))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, symptomHistoryTabLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(331, 331, 331))))
        );
        symptomHistoryTabLayout.setVerticalGroup(
            symptomHistoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(symptomHistoryTabLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(symptomHistoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        
        painSlider.setMajorTickSpacing(1);
        painSlider.setMaximum(10);
        painSlider.setPaintLabels(true);

        shortnessOfBreathSlider.setMajorTickSpacing(1);
        shortnessOfBreathSlider.setMaximum(10);
        shortnessOfBreathSlider.setPaintLabels(true);

        wellbeingSlider.setMajorTickSpacing(1);
        wellbeingSlider.setMaximum(10);
        wellbeingSlider.setPaintLabels(true);

        anxietySlider.setMajorTickSpacing(1);
        anxietySlider.setMaximum(10);
        anxietySlider.setPaintLabels(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SUBMIT SYMPTOMS");

        tirednessSlider.setMajorTickSpacing(1);
        tirednessSlider.setMaximum(10);
        tirednessSlider.setPaintLabels(true);

        depressionSlider.setMajorTickSpacing(1);
        depressionSlider.setMaximum(10);
        depressionSlider.setPaintLabels(true);

        nauseaSlider.setMajorTickSpacing(1);
        nauseaSlider.setMaximum(10);
        nauseaSlider.setPaintLabels(true);

        appetiteSlider.setMajorTickSpacing(1);
        appetiteSlider.setMaximum(10);
        appetiteSlider.setPaintLabels(true);

        drowsinessSlider.setMajorTickSpacing(1);
        drowsinessSlider.setMaximum(10);
        drowsinessSlider.setPaintLabels(true);

        otherSlider.setMajorTickSpacing(1);
        otherSlider.setMaximum(10);
        otherSlider.setPaintLabels(true);

        submitButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        painLabel.setText("Pain");

        shortnessOfBreathLabel.setText("Shortness of Breath");

        wellBeingLabel.setText("Wellbeing");

        anxietyLabel.setText("Anxiety");

        tirednessLabel.setText("Tiredness");

        depressionLabel.setText("Depression");

        nauseaLabel.setText("Nausea");

        appetiteLabel.setText("Appetite");

        drowsinessLabel.setText("Drowsiness");

        otherLabel.setText("Other");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Please rate each symptom as accurately as possible between 1 and 10, with 1 being the lowest and 10 being the highest.");

        javax.swing.GroupLayout submitSymptomsTabLayout = new javax.swing.GroupLayout(submitSymptomsTab);
        submitSymptomsTab.setLayout(submitSymptomsTabLayout);
        submitSymptomsTabLayout.setHorizontalGroup(
            submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(painSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(shortnessOfBreathSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anxietySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tirednessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drowsinessSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appetiteSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nauseaSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depressionSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(painLabel)
                    .addComponent(shortnessOfBreathLabel)
                    .addComponent(wellBeingLabel)
                    .addComponent(anxietyLabel)
                    .addComponent(tirednessLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(otherLabel)
                    .addComponent(drowsinessLabel)
                    .addComponent(appetiteLabel)
                    .addComponent(nauseaLabel)
                    .addComponent(depressionLabel))
                .addGap(221, 221, 221))
            .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(wellbeingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submitSymptomsTabLayout.createSequentialGroup()
                .addContainerGap(260, Short.MAX_VALUE)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submitSymptomsTabLayout.createSequentialGroup()
                        .addComponent(submitButton)
                        .addGap(568, 568, 568))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submitSymptomsTabLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(245, 245, 245))))
        );

        submitSymptomsTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {appetiteSlider, depressionSlider, drowsinessSlider, nauseaSlider, otherSlider, painSlider, shortnessOfBreathSlider, tirednessSlider, wellbeingSlider});

        submitSymptomsTabLayout.setVerticalGroup(
            submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitSymptomsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(painLabel)
                    .addComponent(depressionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(painSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depressionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortnessOfBreathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nauseaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortnessOfBreathSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nauseaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wellBeingLabel)
                    .addComponent(appetiteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wellbeingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appetiteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anxietyLabel)
                    .addComponent(drowsinessLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anxietySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drowsinessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tirednessLabel)
                    .addComponent(otherLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(submitSymptomsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tirednessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(submitButton)
                .addGap(24, 24, 24))
        );

        PatientTabbedPane.addTab("Symptoms", submitSymptomsTab);
        PatientTabbedPane.addTab("Symptom History", symptomHistoryTab);
                
        patientInfoPanel = new javax.swing.JPanel();
        patientName = new javax.swing.JLabel();
        providerName = new javax.swing.JLabel();
        patientDOB = new javax.swing.JLabel();
        patientSex = new javax.swing.JLabel();
        emailHeader = new javax.swing.JLabel();
        patientEmail = new javax.swing.JLabel();
        editEmail = new javax.swing.JTextField();
        phoneHeader = new javax.swing.JLabel();
        patientPhone = new javax.swing.JLabel();
        editPhone = new javax.swing.JTextField();
        addressHeader = new javax.swing.JLabel();
        streetAddr = new javax.swing.JLabel();
        editStreet = new javax.swing.JTextField();
        cityStateAddr = new javax.swing.JLabel();
        editCityState = new javax.swing.JTextField();
        pharHeader = new javax.swing.JLabel();
        pharName = new javax.swing.JLabel();
        pharCityState = new javax.swing.JLabel();
        pharPhone = new javax.swing.JLabel();
        editPharName = new javax.swing.JTextField();
        editPharCity = new javax.swing.JTextField();
        editPharPhone = new javax.swing.JTextField();
        editInfoButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dateReceivedHeader = new javax.swing.JLabel();
        messageDates = new javax.swing.JComboBox();
        messageHeader = new javax.swing.JLabel();
        JScrollPane3 = new javax.swing.JScrollPane();
        messages = new javax.swing.JTextArea();
        prescriptionHeader = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prescriptionSummary = new javax.swing.JTextArea();
        prescriptionSummary.setEditable(false);
        
        patientName.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        patientName.setText(patient.getname());

        providerName.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        providerName.setText("Provider: " + patient.getDoctor().getname());

       /* patientDOB.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        patientDOB.setText("DOB: 8/18/1995");

        patientSex.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        patientSex.setText("Male"); */

        emailHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        emailHeader.setText("Email:");

        patientEmail.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        patientEmail.setText(patient.getEmail());

        editEmail.setText("Enter new email address here");
        
        editEmail.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        
        editEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmailActionPerformed(evt);
            }
        });

        phoneHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        phoneHeader.setText("Phone Number:");

        patientPhone.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        patientPhone.setText("(" + patient.getPhoneNumber().substring(0, 3) + ") " +
        		patient.getPhoneNumber().substring(3, 6) + "-" + 
        		patient.getPhoneNumber().substring(6, patient.getPhoneNumber().length()));

        editPhone.setText("Enter new phone number here");
        editPhone.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPhoneActionPerformed(evt);
            }
        });

        addressHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        addressHeader.setText("Address:");

        streetAddr.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        streetAddr.setText(patient.getStreetAddress());

        editStreet.setText("Enter new street address here");
        editStreet.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStreetActionPerformed(evt);
            }
        });

        cityStateAddr.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        cityStateAddr.setText(patient.getCityStateAddress());

        editCityState.setText("Enter new city, state zip here");
        editCityState.setToolTipText("");
        editCityState.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editCityState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCityStateActionPerformed(evt);
            }
        });

        pharHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        pharHeader.setText("Pharmacy:");

        pharName.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        pharName.setText(patient.getPharmacy().getName());

        pharCityState.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        pharCityState.setText(patient.getPharmacy().getAddress());

        pharPhone.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        pharPhone.setText("(" + patient.getPharmacy().getPhone().substring(0, 3) + ") " +
        		patient.getPharmacy().getPhone().substring(3, 6) + "-" + 
        		patient.getPharmacy().getPhone().substring(6, patient.getPharmacy().getPhone().length()));

        editPharName.setText("Enter new pharmacy name");
        editPharName.setToolTipText("");
        editPharName.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editPharName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPharNameActionPerformed(evt);
            }
        });

        editPharCity.setText("Enter new pharmacy city, state");
        editPharCity.setToolTipText("");
        editPharCity.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editPharCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPharCityActionPerformed(evt);
            }
        });

        editPharPhone.setText("Enter new pharmacy phone number");
        editPharPhone.setToolTipText("");
        editPharPhone.addFocusListener(new FocusAdapter() {
        	public void focusGained(FocusEvent e){
        	JTextField source = (JTextField)e.getComponent();
        	source.setText("");
        	source.removeFocusListener(this);
        	}
        });
        editPharPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPharPhoneActionPerformed(evt);
            }
        });

        editInfoButton.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        editInfoButton.setText("Edit");
        editInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt, patient);
            }
        });
        javax.swing.GroupLayout patientInfoPanelLayout = new javax.swing.GroupLayout(patientInfoPanel);
        patientInfoPanel.setLayout(patientInfoPanelLayout);
        patientInfoPanelLayout.setHorizontalGroup(
            patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientInfoPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientSex)
                            .addComponent(patientName)
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientDOB)
                                    .addComponent(providerName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64))))
                    .addGroup(patientInfoPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(phoneHeader)
                            .addComponent(emailHeader)
                            .addComponent(pharHeader)
                            .addComponent(addressHeader))
                        .addGap(29, 29, 29)
                        .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(cityStateAddr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editCityState, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(patientPhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(streetAddr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(patientEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(pharPhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editPharPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(pharName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                .addComponent(editPharName, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                                .addComponent(pharCityState)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editPharCity, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        patientInfoPanelLayout.setVerticalGroup(
            patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patientName)
                .addGap(1, 1, 1)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientInfoPanelLayout.createSequentialGroup()
                        .addComponent(providerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patientDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(editInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientSex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailHeader)
                    .addComponent(patientEmail)
                    .addComponent(editEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneHeader)
                    .addComponent(patientPhone)
                    .addComponent(editPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressHeader)
                    .addComponent(streetAddr)
                    .addComponent(editStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityStateAddr)
                    .addComponent(editCityState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pharHeader)
                    .addComponent(pharName)
                    .addComponent(editPharName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pharCityState)
                    .addComponent(editPharCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patientInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pharPhone)
                    .addComponent(editPharPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        PatientTabbedPane.addTab("Patient Information", patientInfoPanel);

        dateReceivedHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        dateReceivedHeader.setText("Date Received: ");
        
        ArrayList<String> dates = new ArrayList<String>();
        
        // for TESTING- IT WORKS! :D
        patient.addMessage("04/19/2015 Hey, call me. My phone number is 623-555-5555");
        patient.addMessage("04/20/2015 Hey, I think you're pregnant. Call me.");
     
        // adds the dates to the dates combo box
        for(int i = 0; i < patient.getMessageList().size(); i++){
        	dates.add(patient.getMessageList().get(i).substring(0, 11));
        }
               
        messageDates.setModel(new javax.swing.DefaultComboBoxModel(dates.toArray()));
        messageDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageDatesActionPerformed(evt, patient);
            }
        });

        messageHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        messageHeader.setText("Message:");
        
        messages.setEditable(false);
        messages.setColumns(20);
        messages.setRows(5);
        messages.setLineWrap(true);
        if(patient.getMessageList().size() > 0)
        	messages.append(patient.getMessageList().get(0).substring(11, patient.getMessageList().get(0).length()));
       
        JScrollPane3.setViewportView(messages);

        prescriptionHeader.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        prescriptionHeader.setText("Prescription Summary:");

        prescriptionSummary.setColumns(20);
        prescriptionSummary.setRows(5);
        jScrollPane2.setViewportView(prescriptionSummary);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateReceivedHeader)
                    .addComponent(messageDates, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(prescriptionHeader)
                    .addComponent(JScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addComponent(messageHeader)
                    .addComponent(jScrollPane2))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateReceivedHeader)
                    .addComponent(messageHeader))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(prescriptionHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        PatientTabbedPane.addTab("Messages", jPanel2);
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PatientTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(PatientTabbedPane)
                .addContainerGap())
        ); 
        /*
        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PatientTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(PatientTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        ); */
       
       pack();
    }// </editor-fold>                        

    private boolean checkVal(double val){
        if (val <=10 && val > 0)
            return true;
        else
            return false;
    }
    
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:      
        double painRate = painSlider.getValue();
        double shortnessOfBreathRate = shortnessOfBreathSlider.getValue();
        double wellbeingRate = wellbeingSlider.getValue();     
        double anxietyRate = anxietySlider.getValue();
        double tirednessRate = tirednessSlider.getValue();
        double depressionRate = depressionSlider.getValue();
        double nauseaRate = nauseaSlider.getValue();
        double appetiteRate = appetiteSlider.getValue();
        double drowsinessRate = drowsinessSlider.getValue();
        double otherRate = otherSlider.getValue();
        
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/YYY");//include time??
        //check if submitting symptoms within specified time frame???
        Date today = new Date();
        
        //check if all values are valid
        if (checkVal(painRate) && checkVal(shortnessOfBreathRate) && checkVal(wellbeingRate) && checkVal(anxietyRate) && checkVal(tirednessRate) &&
                checkVal(depressionRate) && checkVal(nauseaRate) && checkVal(appetiteRate) && checkVal(drowsinessRate) && checkVal(otherRate))
        {
            Symptom new_pain = new Symptom("Pain", painRate, today, threshhold);
            Symptom new_shortnessOfBreath = new Symptom("Shortness of Breath", shortnessOfBreathRate, today, threshhold);
            Symptom new_wellbeing = new Symptom("Wellbeing", wellbeingRate, today, threshhold);
            Symptom new_anxiety = new Symptom("Anxiety", anxietyRate, today, threshhold);
            Symptom new_tiredness = new Symptom("Tiredness", tirednessRate, today, threshhold);
            Symptom new_depression = new Symptom("Depression", depressionRate, today, threshhold);
            Symptom new_nausea = new Symptom("Nausea", nauseaRate, today, threshhold);
            Symptom new_appetite = new Symptom("Appetite", appetiteRate, today, threshhold);
            Symptom new_drowsiness = new Symptom("Drowsiness", drowsinessRate, today, threshhold);
            Symptom new_other = new Symptom("Other", otherRate, today, threshhold); 
            //add new symtoms to pt's symptom list
            patient.symptomList.add(new_pain);
            patient.symptomList.add(new_shortnessOfBreath);
            patient.symptomList.add(new_wellbeing);
            patient.symptomList.add(new_anxiety);
            patient.symptomList.add(new_tiredness);
            patient.symptomList.add(new_depression);
            patient.symptomList.add(new_nausea);
            patient.symptomList.add(new_appetite);
            patient.symptomList.add(new_drowsiness);
            patient.symptomList.add(new_other);
            
        }
        else if (!checkVal(painRate)){
            //
        }
        
        //continue error messages
        
    }            
    
    // function for checking validity of email in the editButtonActionPerformed method
    public boolean isEmail(String check){
    	int count = 0;
    	for(int i = 0; i < check.length(); i++){
    		if(check.substring(i, i+1).compareTo("@") == 0)
    			count++;
    	}
    	
    	if(count == 1){
    		if(check.length() <= 10)
    			return false;
    		else{
	    		if(check.substring(check.length()-4, check.length()).compareTo(".com") == 0 ||
	    				check.substring(check.length()-4, check.length()).compareTo(".net") == 0 ||
	    				check.substring(check.length()-4, check.length()).compareTo(".org") == 0||
	    				check.substring(check.length()-4, check.length()).compareTo("edu") == 0 ||
	    				check.substring(check.length()-4, check.length()).compareTo(".gov") == 0 ||
	    				check.substring(check.length()-4, check.length()).compareTo(".mil") == 0 ||
	    				check.substring(check.length()-4, check.length()).compareTo(".int") == 0)
	    					return true;
	    		else
	    			return false;
    		}
    	}
    	else
    		return false;
    }
    
    public boolean isPhone(String check){
    	if(check.length() != 10)
    		return false;
    	else{
    		for(int i = 0; i < check.length(); i++){
    			if(!check.substring(i, i+1).equals("0") &&
    					!check.substring(i, i+1).equals("1") &&
    					!check.substring(i, i+1).equals("2") &&
    					!check.substring(i, i+1).equals("3") &&
    					!check.substring(i, i+1).equals("4") &&
    					!check.substring(i, i+1).equals("5") &&
    					!check.substring(i, i+1).equals("6") &&
    					!check.substring(i, i+1).equals("7") &&
    					!check.substring(i, i+1).equals("8") &&
    					!check.substring(i, i+1).equals("9"))
    				return false;    					
    		}
    		return true;
    	}
    }
    
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt, Patient patient){
    	int count = 0;
    	if(!editEmail.getText().equals("") && !editEmail.getText().equals("Enter new email address here")){
    		if(isEmail(editEmail.getText())){
	    		 String newEmail = editEmail.getText();	
	    	     patientEmail.setText(newEmail);
	    	     editEmail.setText("");
	    	     patient.setEmail(newEmail); // I hope this actually changes the patient field when we return to UI
    		}
    		else{
    			javax.swing.JOptionPane.showMessageDialog(jScrollPane1, "Please enter a valid email.");
    			editEmail.setText("");
    			count++;
    		}
    	}
    	else
    		count++;
    	
    	if(!editPhone.getText().equals("") && !editPhone.getText().equals("Enter new phone number here")){
    		if(isPhone(editPhone.getText())){
    		String newPhone= editPhone.getText();	
    		patientPhone.setText("(" + newPhone.substring(0, 3) + ") " + newPhone.substring(3, 6) + "-" + newPhone.substring(6, newPhone.length()));
   	     	editPhone.setText("");
   	     	patient.setPhoneNumber(newPhone); // I hope this actually changes the patient variable when we return
    		}
    		else{
    			count++;
    			editPhone.setText("");
    			javax.swing.JOptionPane.showMessageDialog(jScrollPane1, "Please enter a valid phone number in the form of XXXXXXXXXX with no spaces");
    		}
    			
   	     }
    	else
    		count++;
    	
    	if(!editStreet.getText().equals("") && !editStreet.getText().equals("Enter new street address here")){
    		String newStreet = editStreet.getText();
    		streetAddr.setText(newStreet);
    		editStreet.setText("");
    		patient.setStreetAddress(newStreet);
    	}
    	else 
    		count++;
    	
    	if(!editCityState.getText().equals("") && !editCityState.getText().equals("Enter new city, state zip here")){
    		String newCityState = editCityState.getText();
    		cityStateAddr.setText(newCityState);
    		editCityState.setText("");
    		patient.setCityStateAddress(newCityState);
    	}
    	else
    		count++;
    	
    	if(!editPharName.getText().equals("") && !editPharName.getText().equals("Enter new pharmacy name")){
    		String newPharName = editPharName.getText();
    		pharName.setText(newPharName);
    		editPharName.setText("");
    		patient.getPharmacy().changeName(newPharName);
    	}
    	else
    		count++;
    	
    	if(!editPharCity.getText().equals("") && !editPharCity.getText().equals("Enter new pharmacy city, state")){
    		String newPharCity = editPharCity.getText();
    		pharCityState.setText(newPharCity);
    		editPharCity.setText("");
    		patient.getPharmacy().changeAddr(newPharCity);
    	}
    	else
    		count++;
    	
    	if(!editPharPhone.getText().equals("") && !editPharPhone.getText().equals("Enter new pharmacy phone number")){
    		if(isPhone(editPharPhone.getText())){
        		String newPhone= editPharPhone.getText();	
        		pharPhone.setText("(" + newPhone.substring(0, 3) + ") " + newPhone.substring(3, 6) + "-" + newPhone.substring(6, newPhone.length()));
       	     	editPharPhone.setText("");
       	     	patient.getPharmacy().changePhone(newPhone);
        		}
        		else{
        			count++;
        			editPharPhone.setText("");
        			javax.swing.JOptionPane.showMessageDialog(jScrollPane1, "Please enter a valid pharmacy phone number in the form of XXXXXXXXXX with no spaces");
        		}
    	}
    	else
    		count++;
    	
    	if(count == 7)
    		javax.swing.JOptionPane.showMessageDialog(jScrollPane1, "Please enter new profile information in their respective text fields.");
    	else
    		javax.swing.JOptionPane.showMessageDialog(jScrollPane1, "Profile information changed.");
    	
    	
    }
    
    private void editEmailActionPerformed(java.awt.event.ActionEvent evt) {                                          
    }                                         

    private void editPhoneActionPerformed(java.awt.event.ActionEvent evt) {                                          
    }                                         

    private void editStreetActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void editCityStateActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void editPharNameActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void editPharCityActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void editPharPhoneActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void messageDatesActionPerformed(java.awt.event.ActionEvent evt, Patient patient) {                                             
        String selectedDate = (String) messageDates.getSelectedItem();
        messages.setText(null);
        
        for(int i = 0; i < patient.getMessageList().size(); i++){
        	if(selectedDate.compareTo(patient.getMessageList().get(i).substring(0, 11)) == 0){
        		messages.append(patient.getMessageList().get(i).substring(11, patient.getMessageList().get(i).length()));
        	}
        }
    }                                            

    /**
     * @param args the command line arguments
     */
   // public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientUI().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify                     
    private javax.swing.JTabbedPane PatientTabbedPane;
    private javax.swing.JLabel anxietyLabel;
    private javax.swing.JSlider anxietySlider;
    private javax.swing.JLabel appetiteLabel;
    private javax.swing.JSlider appetiteSlider;
    private javax.swing.JLabel depressionLabel;
    private javax.swing.JSlider depressionSlider;
    private javax.swing.JLabel drowsinessLabel;
    private javax.swing.JSlider drowsinessSlider;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nauseaLabel;
    private javax.swing.JSlider nauseaSlider;
    private javax.swing.JLabel otherLabel;
    private javax.swing.JSlider otherSlider;
    private javax.swing.JLabel painLabel;
    private javax.swing.JSlider painSlider;
    private javax.swing.JLabel shortnessOfBreathLabel;
    private javax.swing.JSlider shortnessOfBreathSlider;
    private javax.swing.JButton submitButton;
    private javax.swing.JPanel submitSymptomsTab;
    private javax.swing.JPanel symptomHistoryTab;
    private javax.swing.JLabel tirednessLabel;
    private javax.swing.JSlider tirednessSlider;
    private javax.swing.JLabel wellBeingLabel;
    private javax.swing.JSlider wellbeingSlider;
    private javax.swing.JLabel addressHeader;
    private javax.swing.JLabel cityStateAddr;
    private javax.swing.JLabel dateReceivedHeader;
    private javax.swing.JTextField editCityState;
    private javax.swing.JTextField editEmail;
    private javax.swing.JButton editInfoButton;
    private javax.swing.JTextField editPharCity;
    private javax.swing.JTextField editPharName;
    private javax.swing.JTextField editPharPhone;
    private javax.swing.JTextField editPhone;
    private javax.swing.JTextField editStreet;
    private javax.swing.JLabel emailHeader;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane JScrollPane3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox messageDates;
    private javax.swing.JLabel messageHeader;
    private javax.swing.JTextArea messages;
    private javax.swing.JLabel patientDOB;
    private javax.swing.JLabel patientEmail;
    private javax.swing.JPanel patientInfoPanel;
    private javax.swing.JLabel patientName;
    private javax.swing.JLabel patientPhone;
    private javax.swing.JLabel patientSex;
    private javax.swing.JLabel pharCityState;
    private javax.swing.JLabel pharHeader;
    private javax.swing.JLabel pharName;
    private javax.swing.JLabel pharPhone;
    private javax.swing.JLabel phoneHeader;
    private javax.swing.JLabel prescriptionHeader;
    private javax.swing.JTextArea prescriptionSummary;
    private javax.swing.JLabel providerName;
    private javax.swing.JLabel streetAddr;
    // End of variables declaration                   
}